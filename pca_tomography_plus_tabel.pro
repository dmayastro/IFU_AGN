pro pca_tomography_plus_tabel


;input parameters

;name of the data cube (full path) in which the PCA Tomogrpahy will be applied
tabel='C:\Users\incta\Desktop\pca_table\new\9p_all.txt'

;directory where ALL the files generated by this program will be saved
outfolder='C:\Users\incta\Desktop\pca_table\new\'

;name of the file (full path) containing the numbers of the eigenvectors that will be constructed by the program
eigenvectors_list='C:\Users\incta\Desktop\pca_table\new\autovetores.txt'

;number of eigenvectors taht will be constructed by the program
eigenvectors_number=9

;name of the file, to be created, containing the table with the obtained eigenvectors
PC='pcs_tabela_teste_PCA.dat'

;name of the file, to be created, containing the table with the data in the new coordinate system (tomograms table)
SCORE='scores_tabela_teste_PCA.dat'

;name of the file, to be created, containing the average values of the table
average_values='valores_medios.txt'

;prefix of the names of the files, to be created, containing the eigenvectors obtained by the program
eigenvectors_prefix='autovetor_tabela_PCA_teste_'

;prefix of the names of the files, to be created, containing the projections of the data on each eigenvector
projections_prefix='projecao_tabela_PCA_teste_'

;name of the file, to be created, containing the eigenvalues of the obtained eigenvectors
eigenvalues_file='autovalores_tabela_PCA_teste.txt'

;number of independent variables
m=9

;number of observables
n=382

;beginning of the program

I_beta_lambda_zero=make_array(m,n,/FLOAT) ;m (variaveis) aqui eh o numero de colunas!!!
I_beta_lambda=make_array(m,n,/FLOAT)
Ccov=make_array(m,m,/FLOAT)
E_lambda_k=make_array(m,m,/FLOAT)
eigenvalues=make_array(m,/FLOAT)
T_beta_k=make_array(m,n,/FLOAT)
list=make_array(eigenvectors_number,/INTEGER)
eigenspectrum=make_array(m,/DOUBLE)
projection=make_array(n,/DOUBLE)
mstring=STRING(m)
mstring=STRTRIM(mstring,1)


OPENR,1,tabel
READF,1,I_beta_lambda_zero
CLOSE,1

I_beta_lambda=I_beta_lambda_zero

;subtracting the average values
Q_lambda=make_array(m,/FLOAT)
FOR lambda=0, m-1 DO BEGIN
   Q_lambda[lambda]=MEAN(I_beta_lambda_zero[lambda,*])
   beta=ULONG(0)
   FOR beta=ULONG(0), ULONG(n-1) DO BEGIN
      I_beta_lambda[lambda,beta]=I_beta_lambda_zero[lambda,beta]-Q_lambda[lambda]
   ENDFOR
ENDFOR

OPENW,1,outfolder+average_values
FOR k=0, m-1 DO BEGIN
   PRINTF,1,Q_lambda[k]
ENDFOR
close,1

;building the covariance matrix
Ccov=(TRANSPOSE(I_beta_lambda) ## I_beta_lambda)/(n-1)

;diagonalizing the covariance matrix
SVDC, Ccov, eigenvalues, E_lambda_k, V,/DOUBLE, ITMAX=1000

;passing the data to the new coordinate system
T_beta_k=I_beta_lambda##E_lambda_k

OPENR,1,eigenvectors_list
READF,1,list
close,1


;building the eigenspectra and tomograms

FOR w=0.0, eigenvectors_number-1 DO BEGIN
   eigenspectrum[*]=E_lambda_k[list[w]-1,*]
   l=STRING(list[w])
   l=STRTRIM(l,1)
   OPENW, 1, outfolder+eigenvectors_prefix+l+'.txt'
   FOR k=0.0, m-1 DO BEGIN
      PRINTF, 1, eigenspectrum[k]
   ENDFOR
   close, 1
   projection[*]=T_beta_k[list[w]-1,*]
   OPENW, 1, outfolder+projections_prefix+l+'.txt'
   FOR k=0.0, n-1 DO BEGIN
      PRINTF, 1, projection[k]
   ENDFOR
   close, 1
ENDFOR

print, size(E_lambda_k)
print, size(T_beta_k)

OPENW,1,outfolder+eigenvalues_file
FOR w=0.0, m-1 DO BEGIN
   PRINTF,1,eigenvalues[w]
ENDFOR
close,1

OPENW,1,outfolder+PC
FOR w=0, m-1 DO BEGIN
   PRINTF,1,E_lambda_k[*,w], FORMAT='('+mstring+'F10.4)'
ENDFOR
close,1

OPENW,1,outfolder+SCORE
FOR w=0, n-1 DO BEGIN
   PRINTF,1,T_beta_k[*,w], FORMAT='('+mstring+'F10.4)'
ENDFOR
close,1
print, "Done!"




END



