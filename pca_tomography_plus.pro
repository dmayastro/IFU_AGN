pro pca_tomography_plus


;input parameters

;name of the data cube (full path) in which the PCA Tomogrpahy will be applied
datacube='C:\Users\incta\Desktop\new_sinfoni_nifs_sifs\Alberto\ESO_sum_qfitsv_e15gig_x25y30n2_crop.fits'

;directory where ALL the files generated by this program will be saved
outfolder='C:\Users\incta\Desktop\new_sinfoni_nifs_sifs\Alberto\PCA_eso_crop\'

;extension of the data cube that will be used in the PCA Tomography process
extension=0

;values of the lowest and highest spectral pixel to be used in the execution of the PCA. the user intends
;to make a re-binning in the data cube before the execution of the PCA, then, the parameters minspecpx and
;maxspecpx must correspond to the values of the already binned data cube
minspecpx=LONG(1)
maxspecpx=LONG(4035)
;values of the lowest and highest spatial pixel of the horizontal axis to be used in the execution of the PCA
minspatpx_x=LONG(1)
maxspatpx_x=LONG(90)
;values of the lowest and highest spatial pixel of the vertical axis to be used in the execution of the PCA
minspatpx_y=LONG(1)
maxspatpx_y=LONG(40)

;name of the file (full path) containing the numbers of the eigenvectors that will be used to construct the eigenspectra and tomograms
eigenvectors_list='C:\Users\incta\Desktop\new_sinfoni_nifs_sifs\Alberto\autovetores.txt'

;number of eigenvectors to be used to generate the eigenspectra and tomograms
eigenvectors_number=15

;name of the logfile to be created
logfile='eso_.txt'

;name of the file, to be created, containing the table with the obtained eigenvectors
PC='pcs_eso.dat'

;name of the file, to be created, containing the table with the data in the new coordinate system (tomograms table)
SCORE='scores_eso.dat'

;name of the file, to be created, containing the average spectrum of the data cube
average_spectrum='espectromedio_eso.txt'

;prefix of the names of the eigenspectra files to be created
eigenspectra_prefix='eigenspectrum_eso_'

;prefix of the names of the tomograms files to be created
tomograms_prefix='tomogram_eso_'

;name of the file, to be created, containing the eigenvalues of the obtained eigenvectors
eigenvalues_file='autovalores_eso.txt'


;beginning of the program

OPENW,2,outfolder+logfile
PRINTF,2,'Logfile for pca_tomography_plus'
PRINTF,2,''
PRINTF,2,''
PRINTF,2,'Datacube used in the procedure: '+datacube
PRINTF,2,'Output folder: '+outfolder
PRINTF,2,''
cube=MRDFITS(datacube,extension,header)
z=size(cube)
m=maxspecpx-minspecpx+1
n=(maxspatpx_x-minspatpx_x+1)*(maxspatpx_y-minspatpx_y+1)
I_beta_lambda_zero=make_array(m,n,/FLOAT)
I_beta_lambda=make_array(m,n,/FLOAT)
Ccov=make_array(m,m,/FLOAT)
E_lambda_k=make_array(m,m,/FLOAT)
eigenvalues=make_array(m,/FLOAT)
T_beta_k=make_array(m,n,/FLOAT)
list=make_array(eigenvectors_number,/INTEGER)
eigenspectrum=make_array(2,m,/DOUBLE)
tomogram=make_array(maxspatpx_x-minspatpx_x+1,maxspatpx_y-minspatpx_y+1,/DOUBLE)

;obtaining the values of lambdazero, deltalambda and reference_pixel
lambdazero=FXPAR(header,'CRVAL3')
deltalambda=FXPAR(header,'CDELT3')
reference_pixel=FXPAR(header,'CRPIX3')

;lambdazero=14468.7
;deltalambda=2.91335
;reference_pixel=-10

;re-binning the data cube
NspecEND=0.0
binagem=''
READ,binagem,PROMPT='Do you wish to perform a re-binning in the datacube (yes/no)?:'
IF (binagem EQ 'yes') or (binagem EQ 'y') THEN BEGIN
   PRINTF,2,'A re-binning was applied on the datacube.'
   READ,reduce_factor,PROMPT='Enter the value of the reduce factor for the re-binning:'
   PRINTF,2,reduce_factor,FORMAT='("Reduce factor: ",I)'
   PRINTF,2,''
   NspecEND=z[3]/reduce_factor
   newcube=REBIN(cube,z[1],z[2],NspecEND)
   lambdazero=lambdazero+(1-reference_pixel)*deltalambda
   reference_pixel=1
   deltalambda=reduce_factor*deltalambda
ENDIF ELSE BEGIN
   PRINTF,2,'No re-binning was applied on the datacube.'
   PRINTF,2,''
   newcube=cube
ENDELSE

;printing the input parameters on the logfile
PRINTF,2,'Parameters used for the procedure.'
PRINTF,2,minspecpx,FORMAT='("minspecpx= ",I)'
PRINTF,2,maxspecpx,FORMAT='("maxspecpx= ",I)'
PRINTF,2,minspatpx_x,FORMAT='("minspatpx_x= ",I)'
PRINTF,2,maxspatpx_x,FORMAT='("maxspatpx_x= ",I)'
PRINTF,2,minspatpx_y,FORMAT='("minspatpx_y= ",I)'
PRINTF,2,maxspatpx_y,FORMAT='("maxspatpx_y= ",I)'
PRINTF,2,''

;preparing the header of the generated tomograms
ref1 = z[1] / 2.0
FOR w=0,ref1 DO BEGIN
ENDFOR
Fi=1-(w-ref1)
i=ref1-Fi
IF (Fi GE 0.5) THEN BEGIN
   i=i+1
ENDIF
ref2 = z[2] / 2.0
FOR w=0,ref2 DO BEGIN
ENDFOR
Fj=1-(w-ref2)
j=ref2-Fj
IF (Fj GE 0.5) THEN BEGIN
   j=j+1
ENDIF
icenter=fix(i)
jcenter=fix(j)
READ,sizepix_x,PROMPT='Enter the value of the size of the spatial pixels (in arcsec) along the horizontal axis:'
READ,sizepix_y,PROMPT='Enter the value of the size of the spatial pixels (in arcsec) along the vertical axis:'

;building the matrix I_beta_lambda_zero
lambda=0
FOR k=minspecpx-1, maxspecpx-1 DO BEGIN
   beta=ULONG(0)
   FOR i=minspatpx_x-1, maxspatpx_x-1 DO BEGIN
      FOR j=minspatpx_y-1, maxspatpx_y-1 DO BEGIN
         I_beta_lambda_zero[lambda,beta]=newcube[i,j,k]
         beta=beta+1
      ENDFOR
   ENDFOR
   lambda=lambda+1
ENDFOR
I_beta_lambda=I_beta_lambda_zero

;subtracting the average spectrum
Q_lambda=make_array(2,m,/FLOAT)
FOR lambda=0, m-1 DO BEGIN
   Q_lambda[0,lambda]=lambdazero+(lambda+1-reference_pixel)*deltalambda
   Q_lambda[1,lambda]=MEAN(I_beta_lambda_zero[lambda,*])
   beta=ULONG(0)
   FOR beta=ULONG(0), ULONG(n-1) DO BEGIN
      I_beta_lambda[lambda,beta]=I_beta_lambda_zero[lambda,beta]-Q_lambda[1,lambda]
   ENDFOR
ENDFOR

OPENW,1,outfolder+average_spectrum
FOR k=0, m-1 DO BEGIN
   PRINTF,1,Q_lambda[*,k]
ENDFOR
close,1

;building the covariance matrix
Ccov=(TRANSPOSE(I_beta_lambda) ## I_beta_lambda)/(n-1)

;diagonalizing the covariance matrix
SVDC, Ccov, eigenvalues, E_lambda_k, V,/DOUBLE, ITMAX=1000

;passing the data to the new coordinate system
T_beta_k=I_beta_lambda##E_lambda_k

OPENR,1,eigenvectors_list
READF,1,list
close,1

;building the eigenspectra and tomograms
k=0.0
FOR w=minspecpx, maxspecpx DO BEGIN
   eigenspectrum[0,k]=lambdazero+(w-reference_pixel)*deltalambda
   k=k+1
ENDFOR
FOR w=0.0, eigenvectors_number-1 DO BEGIN
   FXADDPAR,headerout,'SIMPLE','T'
   FXADDPAR,headerout,'BITPIX',-32
   FXADDPAR,headerout,'NAXIS',2
   FXADDPAR,headerout,'NAXIS1',z[1]
   FXADDPAR,headerout,'NAXIS2',z[2]
   FXADDPAR,headerout,'CRPIX1',icenter
   FXADDPAR,headerout,'CRVAL1',0
   FXADDPAR,headerout,'CDELT1',sizepix_x
   FXADDPAR,headerout,'CRPIX2',jcenter
   FXADDPAR,headerout,'CRVAL2',0
   FXADDPAR,headerout,'CDELT2',sizepix_y
   FXADDPAR,headerout,'LTM1_1',1
   FXADDPAR,headerout,'LTM2_2',1
   FXADDPAR,headerout,'CROTA1',0
   FXADDPAR,headerout,'CROTA2',0
   FXADDPAR,headerout,'CTYPE1','LINEAR'
   FXADDPAR,headerout,'CTYPE2','LINEAR'
   eigenspectrum[1,*]=E_lambda_k[list[w]-1,*]
   l=STRING(list[w])
   l=STRTRIM(l,1)
   OPENW, 1, outfolder+eigenspectra_prefix+l+'.txt'
   FOR k=0.0, m-1 DO BEGIN
      PRINTF, 1, eigenspectrum[*,k]
   ENDFOR
   close, 1
   k=0.0
   FOR i=0.0, maxspatpx_x-minspatpx_x DO BEGIN
      FOR j=0.0, maxspatpx_y-minspatpx_y DO BEGIN
         tomogram[i,j]=T_beta_k[list[w]-1,k]
         k=k+1
      ENDFOR
   ENDFOR
   MWRFITS, tomogram, outfolder+tomograms_prefix+l+'.fits', headerout
ENDFOR
PRINTF,2,'Table of the obtained eigenvectors: '+PC
PRINTF,2,'Table of the obtained tomograms: '+SCORE
PRINTF,2,'File containing the obtained eigenvalues: '+eigenvalues_file
PRINTF,2,''
PRINTF,2,'Constructed tomograms: '
FOR w=0,eigenvectors_number-1 DO BEGIN
   l=STRING(list[w])
   l=STRTRIM(l,1)
   PRINTF,2,tomograms_prefix+l+'.fits'
ENDFOR
PRINTF,2,''
PRINTF,2,'Constructed eigenspectra: '
FOR w=0, eigenvectors_number-1 DO BEGIN
   l=STRING(list[w])
   l=STRTRIM(l,1)
   PRINTF,2,eigenspectra_prefix+l+'.fits'
ENDFOR
PRINTF,2,''
close,2
OPENW,1,outfolder+eigenvalues_file
FOR w=0.0, m-1 DO BEGIN
   PRINTF,1,eigenvalues[w]
ENDFOR
close,1
OPENW,1,outfolder+PC
PRINTF,1,E_lambda_k
close,1
OPENW,1,outfolder+SCORE
PRINTF,1,T_beta_k
close,1
print, "Done!"




END



